services:
   authserver:
    image: 'authserver:latest'
    build:
      context: ../authserver
    container_name: authserver
    ports:
      - 9000:9000

   oauthclient:
    image: 'oauthclient:latest'
    build:
       context: ../oauthclient
    container_name: oauthclient
    ports:
       - 8080:8080
    depends_on:
       - authserver
    environment:
      - REDIRECT_URI=http://localhost:8080
      - AUTHSERVER_BASE=http://authserver:9000

   produtos-app:
      image: 'produtos-app:latest'
      build:
        context: ../produtos-app
      container_name: produtos-app
      ports:
        - 8081:8081
      depends_on:
        db:
          condition: service_healthy
      environment:
        - DATASOURCE_URL=jdbc:postgresql://db:5432/db_produtos
        - DATASOURCE_USERNAME=postgres
        - DATASOURCE_PASSWORD=teste123

   db:
     image: postgres:latest
     container_name: postgres_db
     restart: always
     ports:
       - 5432:5432
     environment:
       POSTGRES_USERNAME: postgres
       POSTGRES_PASSWORD: teste123
       POSTGRES_MULTIPLE_DATABASES: db_produtos, db_clientes, db_pedidos, db_entregas, db_pagamentos, authorization_server
     volumes:
       - ./scripts/multiple-databases.sh:/docker-entrypoint-initdb.d/multiple-databases.sh
       - ./postgres:/var/lib/postgresql/data
     healthcheck:
       test: [ "CMD-SHELL", "pg_isready -U postgres" ]
       interval: 5s
       timeout: 5s
       retries: 5
